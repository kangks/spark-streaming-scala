//apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'scala'

repositories {
//    maven { url repos.cloudera }
    mavenCentral()
//    mavenLocal()
}

configurations {
  provided
}


task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

/*
sourceCompatibility = 1.5
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
}
*/

dependencies {
  	provided 'org.apache.spark:spark-streaming_2.11:1.3+'
  	provided 'com.typesafe.akka:akka-actor_2.11:2.3.9'
  	provided 'org.apache.hadoop:hadoop-client:2.6.0'
  	provided 'org.apache.spark:spark-core_2.11:1.3+'
  	provided 'org.apache.spark:spark-mllib_2.11:1.3+'
  	provided 'org.scala-lang:scala-compiler:2.11.6'
  	provided 'org.scala-lang:jline:2.11+'
  	
    //compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    //testCompile group: 'junit', name: 'junit', version: '4.+'
}

/*
test {
    systemProperties 'property': 'value'
}
*/

/*
uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
*/

/*
task runSpark(dependsOn: 'hadoopJar', type: JavaExec) {
    classpath = files(hadoopJar.archivePath, configurations.providedCompile)
    maxHeapSize = "2048m"

    // Set main class
    if (project.hasProperty('sparkMain')) {
        main = sparkMain
    }
    // Set args
    if (project.hasProperty('sparkArgs')) {
        args(sparkArgs.split(' '))
    }
}
*/
